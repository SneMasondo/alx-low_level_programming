#include "main.h"
#include <stdarg.h>  // For va_list, va_start, va_end

/**
 * _printf - produces output according to a format
 * @format: The format string containing the characters and format specifiers
 *
 * Return: the number of characters printed (excluding null byte)
 */
int _printf(const char *format, ...)
{
    va_list args;
    int count = 0;
    const char *ptr = format;

    // Initialize va_list
    va_start(args, format);

    // Loop through the format string
    while (ptr && *ptr)
    {
        if (*ptr == '%')  // If we find a format specifier
        {
            ptr++;  // Skip the '%' character

            // Handle different format specifiers
            if (*ptr == 'c')  // Handle character
            {
                count += _putchar(va_arg(args, int));  // va_arg extracts the argument
            }
            else if (*ptr == 's')  // Handle string
            {
                char *str = va_arg(args, char *);
                if (!str)
                    str = "(null)";  // If string is NULL, print "(null)"
                while (*str)
                {
                    count += _putchar(*str++);
                }
            }
            else if (*ptr == '%')  // Handle percent sign
            {
                count += _putchar('%');
            }
            else  // If the format specifier is unknown, print it literally
            {
                count += _putchar('%');
                count += _putchar(*ptr);
            }
        }
        else  // Normal character, not a format specifier
        {
            count += _putchar(*ptr);
        }
        ptr++;
    }

    // Clean up va_list
    va_end(args);

    return count;
}

